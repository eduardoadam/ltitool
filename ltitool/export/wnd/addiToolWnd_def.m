## -*- texinfo -*-
## @deftypefn  {} {} dummy()
##
## This is a dummy function documentation. This file have a lot functions
## and each one have a little documentation. This text is to avoid a warning when
## install this file as part of package.
## @end deftypefn
##
## Set the graphics toolkit and force read this file as script file (not a function file).
##
graphics_toolkit qt;
##


##
##
## Begin callbacks definitions 
##

## @deftypefn  {} {} Button_ayuda_doIt (@var{source}, @var{callbackdata}, @var{addiToolWnd})
##
## Define a callback for default action of Button_ayuda control.
##
## @end deftypefn
function Button_ayuda_doIt(source, callbackdata, addiToolWnd)


%
% Run presentation to help  as html file.
%

% global variable
global _ltitoolBasePath;

% Load html file
url = ["file:" _ltitoolBasePath filesep() "ltitool_manual" filesep() "node23.html"];

  if(isunix())
    system(["xdg-open " url]);
  elseif (ispc())
    system(["start " url]);
  else
    disp(["I don't know how to open " url " in your os. Sorry!"]);
  endif;


end

## @deftypefn  {} {} Btn_closeADDITOOL_doIt (@var{source}, @var{callbackdata}, @var{addiToolWnd})
##
## Define a callback for default action of Btn_closeADDITOOL control.
##
## @end deftypefn
function Btn_closeADDITOOL_doIt(source, callbackdata, addiToolWnd)


  % Close window
  close(addiToolWnd.figure);
end

## @deftypefn  {} {} btn_runOPTIMALPID_doIt (@var{source}, @var{callbackdata}, @var{addiToolWnd})
##
## Define a callback for default action of btn_runOPTIMALPID control.
##
## @end deftypefn
function btn_runOPTIMALPID_doIt(source, callbackdata, addiToolWnd)

% This code will be executed when user click the button control.
% As default, all events are deactivated, to activate must set the
% propertie 'have callback' from the properties editor

%
% Run main window of optimal tuning of  PID controller
%

optimalPIDWnd();


end

 
## @deftypefn  {} {@var{ret} = } show_addiToolWnd()
##
## Create windows controls over a figure, link controls with callbacks and return 
## a window struct representation.
##
## @end deftypefn
function ret = show_addiToolWnd()
  _scrSize = get(0, "screensize");
  _xPos = (_scrSize(3) - 876)/2;
  _yPos = (_scrSize(4) - 489)/2;
   addiToolWnd = figure ( ... 
	'Color', [0.949 0.949 0.949], ...
	'Position', [_xPos _yPos 876 489], ...
	'Resize', 'on', ...
	'windowstyle', 'normal', ...
	'MenuBar', 'none');
  additool_Image = axes( ...
	'Units', 'pixels', ... 
	'parent',addiToolWnd, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [304 52 554 387]);
  Button_ayuda = uicontrol( ...
	'parent',addiToolWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [635 12 90 22], ... 
	'String', 'Help', ... 
	'TooltipString', '');
  Btn_closeADDITOOL = uicontrol( ...
	'parent',addiToolWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [768 12 90 22], ... 
	'String', 'Close', ... 
	'TooltipString', '');
  Button_lanzaventanaGLATOOL = uicontrol( ...
	'parent',addiToolWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.961 0.965 0.969], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [20 380 261 39], ... 
	'String', 'Under Constarction', ... 
	'TooltipString', '');
  Button_lanzaVentanaLRTOOL = uicontrol( ...
	'parent',addiToolWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.961 0.965 0.969], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [20 331 263 38], ... 
	'String', 'Under Constarction', ... 
	'TooltipString', '');
  Button_lanzaventanaAJUSTEPID = uicontrol( ...
	'parent',addiToolWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.961 0.965 0.969], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [20 278 264 41], ... 
	'String', 'Under Constarction', ... 
	'TooltipString', '');
  Button_lanzaventanAJUSTEBMPID = uicontrol( ...
	'parent',addiToolWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.961 0.965 0.969], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [20 229 264 40], ... 
	'String', 'Under Constarction', ... 
	'TooltipString', '');
  btn_runOPTIMALPID = uicontrol( ...
	'parent',addiToolWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.961 0.965 0.969], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [20 175 264 37], ... 
	'String', 'Optimal Tuning of  PID Controller', ... 
	'TooltipString', '');
  Label_187 = uicontrol( ...
	'parent',addiToolWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 18, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [162 451 709 28], ... 
	'String', 'Additional Tools for LTI System Control', ... 
	'TooltipString', '');

  addiToolWnd = struct( ...
      'figure', addiToolWnd, ...
      'additool_Image', additool_Image, ...
      'Button_ayuda', Button_ayuda, ...
      'Btn_closeADDITOOL', Btn_closeADDITOOL, ...
      'Button_lanzaventanaGLATOOL', Button_lanzaventanaGLATOOL, ...
      'Button_lanzaVentanaLRTOOL', Button_lanzaVentanaLRTOOL, ...
      'Button_lanzaventanaAJUSTEPID', Button_lanzaventanaAJUSTEPID, ...
      'Button_lanzaventanAJUSTEBMPID', Button_lanzaventanAJUSTEBMPID, ...
      'btn_runOPTIMALPID', btn_runOPTIMALPID, ...
      'Label_187', Label_187);


  set (Button_ayuda, 'callback', {@Button_ayuda_doIt, addiToolWnd});
  set (Btn_closeADDITOOL, 'callback', {@Btn_closeADDITOOL_doIt, addiToolWnd});
  set (btn_runOPTIMALPID, 'callback', {@btn_runOPTIMALPID_doIt, addiToolWnd});
  dlg = struct(addiToolWnd);


%
% Additional tools main windowADDITOOLwnd
%

% global variable
global _ltitoolBasePath;

% Main window image
axes(addiToolWnd.additool_Image);
imshow([_ltitoolBasePath filesep() 'img' filesep() 'underconstruction.jpeg']);
refresh();

% Clear el command Window
clc

%
refresh();


  ret = addiToolWnd;
end

