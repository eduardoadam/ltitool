## -*- texinfo -*-
## @deftypefn  {} {} dummy()
##
## This is a dummy function documentation. This file have a lot functions
## and each one have a little documentation. This text is to avoid a warning when
## install this file as part of package.
## @end deftypefn
##
## Set the graphics toolkit and force read this file as script file (not a function file).
##
graphics_toolkit qt;
##


##
##
## Begin callbacks definitions 
##

## @deftypefn  {} {} btn_ZPmap_doIt (@var{source}, @var{callbackdata}, @var{oLWnd})
##
## Define a callback for default action of btn_ZPmap control.
##
## @end deftypefn
function btn_ZPmap_doIt(source, callbackdata, oLWnd)

%
% Zeros and poles map plot
%

% global variable
global _ltitoolBasePath;

% s-variable is defined
s = tf('s');

% ---------------------------------------------------------------------------------------------------------------------------------------------
% Open Loop transfer function, GLA(s)
numGLA = get(oLWnd.numGLA, 'string');
denGLA = get(oLWnd.denGLA, 'string');
sysStrGLA = strcat('(',numGLA,')', '/','(', denGLA,')');
GLA = tf(eval(sysStrGLA));	% Funcion de transferencia de lazo abierto
% ---------------------------------------------------------------------------------------------------------------------------------------------
k = str2num(get(oLWnd.amplitud_k, 'string'));  % k: amplitud del escalon
tFinal = str2num(get(oLWnd.tFinal, 'string')); % Tf: tiempo de simulacion
% ---------------------------------------------------------------------------------------------------------------------------------------------

% ----------------------------------
% Zeros and poles map
% ----------------------------------
title_string='Poles and Zeros Map of G(s)';
legend_ceros_string='Zeros of G(s)';
legend_polos_string='Poles of G(s)';

% Plot
% ----------------------------------
axes(oLWnd.Image_2);
xpzmap(title_string,legend_ceros_string,legend_polos_string,GLA.num{1,1},GLA.den{1,1});
figuraGLA=1;

% Stability analysis
% --------------------------------
[stability,yinf,Test]=additionalinfo(GLA.num{1,1},GLA.den{1,1},tFinal,1000);
set(oLWnd.label_EstabilidadGLA, "String", num2str(stability));
set(oLWnd.valor_final, "String", num2str(yinf));
set(oLWnd.tiempo_estab, "String", num2str(Test));

% Save data
save([_ltitoolBasePath filesep() 'data' filesep() 'loadOLdata'],'figuraGLA','GLA','k','tFinal')

refresh();

end

## @deftypefn  {} {} btn_OLstep_doIt (@var{source}, @var{callbackdata}, @var{oLWnd})
##
## Define a callback for default action of btn_OLstep control.
##
## @end deftypefn
function btn_OLstep_doIt(source, callbackdata, oLWnd)

%
% Step response is ploted
%

% global variable
global _ltitoolBasePath;

% s-variable is defined
s=tf('s');

% ---------------------------------------------------------------------------------------------------------------------------------------------
% Open Loop transfer function, GLA(s)
numGLA = get(oLWnd.numGLA, 'string');
denGLA = get(oLWnd.denGLA, 'string');
sysStrGLA = strcat('(',numGLA,')', '/','(', denGLA,')');
GLA = tf(eval(sysStrGLA));	% open loop transfer function GLA(s)
% ---------------------------------------------------------------------------------------------------------------------------------------------
k = str2num(get(oLWnd.amplitud_k, 'string'));  % k: step amplitud
tFinal = str2num(get(oLWnd.tFinal, 'string')); % Tf: imulation time
% ---------------------------------------------------------------------------------------------------------------------------------------------

% Plot
% ----------------------------------
axes(oLWnd.Image_2);
OLstepresponse(GLA.num{1,1},GLA.den{1,1},k,0.0,tFinal,1000);
figuraGLA=2;

% Stability analysis
% --------------------------------
[stability,yinf,Test]=additionalinfo(GLA.num{1,1},GLA.den{1,1},tFinal,1000);
set(oLWnd.label_EstabilidadGLA, "String", num2str(stability));
set(oLWnd.valor_final, "String", num2str(yinf));
set(oLWnd.tiempo_estab, "String", num2str(Test));


% Save data
% --------------------------------
save([_ltitoolBasePath filesep() 'data' filesep() 'loadOLdata'],'figuraGLA','GLA','k','tFinal')

%
refresh();

end

## @deftypefn  {} {} btn_OLimp_doIt (@var{source}, @var{callbackdata}, @var{oLWnd})
##
## Define a callback for default action of btn_OLimp control.
##
## @end deftypefn
function btn_OLimp_doIt(source, callbackdata, oLWnd)

%
% Impulse response is ploted
%

% global variable
global _ltitoolBasePath;

% s-variable is defined
s=tf('s');

% Numerator and denominator of open loop transfer function GLA(s)
numGLA = get(oLWnd.numGLA, 'string');
denGLA = get(oLWnd.denGLA, 'string');
sysStrGLA = strcat('(',numGLA,')', '/','(', denGLA,')');
GLA = tf(eval(sysStrGLA));	% open loop transfer function GLA(s)
% ------------------------------------------------
k = str2num(get(oLWnd.amplitud_k, 'string'));  % k: step amplitud
tFinal = str2num(get(oLWnd.tFinal, 'string')); % Tf: simulation time

% Plot impulse response
% ----------------------------------
axes(oLWnd.Image_2);
OLimpulseresponse(GLA.num{1,1},GLA.den{1,1},0.0,tFinal,1000);
hold off
figuraGLA=3;


% Stability analisis 
% --------------------------------
sGLA=minreal(s*GLA); % multiply by s to calculate the impulse response
[stability,yinf,Test]=additionalinfo(sGLA.num{1,1},sGLA.den{1,1},tFinal,1000);
set(oLWnd.label_EstabilidadGLA, "String", num2str(stability));
set(oLWnd.valor_final, "String", num2str(yinf));
set(oLWnd.tiempo_estab, "String", num2str(Test));


% Save data
% --------------------------------
save([_ltitoolBasePath filesep() 'data' filesep() 'loadOLdata'],'figuraGLA','GLA','k','tFinal')

refresh();

end

## @deftypefn  {} {} btn_OLhelp_doIt (@var{source}, @var{callbackdata}, @var{oLWnd})
##
## Define a callback for default action of btn_OLhelp control.
##
## @end deftypefn
function btn_OLhelp_doIt(source, callbackdata, oLWnd)


%
% Run presentation to help  as html file.
%

% global variable
global _ltitoolBasePath;

% Load html file
url = ["file:" _ltitoolBasePath filesep() "ltitool_manual" filesep() "node9.html"];

  if(isunix())
    system(["xdg-open " url]);
  elseif (ispc())
    system(["start " url]);
  else
    disp(["I don't know how to open " url " in your os. Sorry!"]);
  endif;

end

## @deftypefn  {} {} btn_OLclose_doIt (@var{source}, @var{callbackdata}, @var{oLWnd})
##
## Define a callback for default action of btn_OLclose control.
##
## @end deftypefn
function btn_OLclose_doIt(source, callbackdata, oLWnd)


  % Cierro la ventana
  close(oLWnd.figure);

end

## @deftypefn  {} {} Label_10_doIt (@var{source}, @var{callbackdata}, @var{oLWnd})
##
## Define a callback for default action of Label_10 control.
##
## @end deftypefn
function Label_10_doIt(source, callbackdata, oLWnd)

end

## @deftypefn  {} {} btn_OLfig_doIt (@var{source}, @var{callbackdata}, @var{oLWnd})
##
## Define a callback for default action of btn_OLfig control.
##
## @end deftypefn
function btn_OLfig_doIt(source, callbackdata, oLWnd)


% global variable
global _ltitoolBasePath;

% Complex variable "s"
s=tf('s');

% Load data
load([_ltitoolBasePath filesep() 'data' filesep() 'loadOLdata'])

if figuraGLA==1,
  figure
  title_string='Poles and Zeros Map of G(s)';
  legend_ceros_string='Zeros of G(s)';
  legend_polos_string='Poles of G(s)';
  xpzmap(title_string,legend_ceros_string,legend_polos_string,GLA.num{1,1},GLA.den{1,1});
  axisx=xlabel('Real Part'); axisy=ylabel('Imaginary Part');
  set(axisx,'fontsize',14);  
  set(axisy,'fontsize',14);  
  % rewrite data
  figuraGLA=1;
  % Save data
  save([_ltitoolBasePath filesep() 'data' filesep() 'loadOLdata'],'figuraGLA','GLA','k','tFinal')
endif
if figuraGLA==2,
  figure
  OLstepresponse(GLA.num{1,1},GLA.den{1,1},k,0.0,tFinal,1000);
  axisx=xlabel('Time'); axisy=ylabel('Outup Variable');
  set(axisx,'fontsize',14);  
  set(axisy,'fontsize',14);  
  % rewrite data
  figuraGLA=2;
  % Save data
  save([_ltitoolBasePath filesep() 'data' filesep() 'loadOLdata'],'figuraGLA','GLA','k','tFinal')
endif
if figuraGLA==3,
  figure
  OLimpulseresponse(GLA.num{1,1},GLA.den{1,1},0.0,tFinal,1000);
  axisx=xlabel('Time'); axisy=ylabel('Outup Variable');
  set(axisx,'fontsize',14);  
  set(axisy,'fontsize',14);  
  % rewrite data
  figuraGLA=3;
  % Save data
  save([_ltitoolBasePath filesep() 'data' filesep() 'loadOLdata'],'figuraGLA','GLA','k','tFinal')
end

end

## @deftypefn  {} {} btn_OLsave_doIt (@var{source}, @var{callbackdata}, @var{oLWnd})
##
## Define a callback for default action of btn_OLsave control.
##
## @end deftypefn
function btn_OLsave_doIt(source, callbackdata, oLWnd)


% Save data of:
% 	Transfer function,
% 	Step response,
% 	Impulse response,
% 	Step amplitud
% 	Simulation time
% 	Final value of step response 
% 	Tiempo de establecimiento


[fname, fpath, fltidx] = uiputfile ({'.txt','Archivos de texto';'.m', 'Scripts de octave';'.', 'Todos los archivos'}, 'Abrir archivo. Elija un nombre de archivo para abrir');
if(fname)
  % Complex variable "s"
  s = tf('s');

  % ---------------------------------------------------------------------------------------------------------------------------------------------
  % Open loop transfer function, Gol(s)
  numGLA = get(oLWnd.numGLA, 'string');
  denGLA = get(oLWnd.denGLA, 'string');
  sysStrGLA = strcat('(',numGLA,')', '/','(', denGLA,')');
  GLA = tf(eval(sysStrGLA));
  % ---------------------------------------------------------------------------------------------------------------------------------------------
  k = str2num(get(oLWnd.amplitud_k, 'string'));  % k: step amplitud
  tFinal = str2num(get(oLWnd.tFinal, 'string')); % Tf: simulation time
  % ---------------------------------------------------------------------------------------------------------------------------------------------

  % Zeros-Poles of Gol(s)
  Gs=minreal(GLA);
  polosGs=roots(Gs.den{1,1});
  zerosGs=roots(Gs.num{1,1});

  % Simulations
  % --------------------
  % Step response
  step_amplitud=k;
  DT=tFinal/1000;			%Time interval
  [step_ysim,step_tsim]=step(k*Gs,tFinal,DT);
  % Impulse response
  [imp_ysim,imp_tsim]=impulse(Gs,tFinal,DT);

  % Stability analysis
  % --------------------------------
  [stability,yinf,Test]=additionalinfo(GLA.num{1,1},GLA.den{1,1},tFinal,1000);

  % Save results
  % --------------------------
  save([fpath fname], 'Gs', 'polosGs', 'zerosGs', ...
       'stability', 'yinf', 'Test', 'step_amplitud', 'step_tsim', 'step_ysim', 'imp_ysim', 'imp_tsim');

else
  disp('Canceled');
endif;

end

## @deftypefn  {} {} btn_OLsetdefault_doIt (@var{source}, @var{callbackdata}, @var{oLWnd})
##
## Define a callback for default action of btn_OLsetdefault control.
##
## @end deftypefn
function btn_OLsetdefault_doIt(source, callbackdata, oLWnd)


%
% Default data of Gol is saved and loaded on the main window
%
%

% global variable
global _ltitoolBasePath;

% Complex variable "s"
s=tf('s'); 

% Open loop transfer function
% --------------------------
GLA=(s+1)/(s^2+0.5*s+1);

% figure flag
figuraGLA=1;

% Simulation
k=1;		% step amplitud
tFinal=20;	% simulation time

% Save data defined as default
% ---------------------------------------------------
save([_ltitoolBasePath filesep() 'data' filesep() 'loadOLdata'],'figuraGLA','GLA','k','tFinal')

% ------------------------------------------------------------------------
% Information is reloaded on the main window
% ------------------------------------------------------------------------
set(oLWnd.numGLA,'string',polyout(GLA.num{1,1})); 
set(oLWnd.denGLA,'string',polyout(GLA.den{1,1}));
set(oLWnd.amplitud_k,'string',num2str(k));
set(oLWnd.tFinal,'string',num2str(tFinal));

end

 
## @deftypefn  {} {@var{ret} = } show_oLWnd()
##
## Create windows controls over a figure, link controls with callbacks and return 
## a window struct representation.
##
## @end deftypefn
function ret = show_oLWnd()
  _scrSize = get(0, "screensize");
  _xPos = (_scrSize(3) - 1108)/2;
  _yPos = 146;
   oLWnd = figure ( ... 
	'Color', [0.125 0.290 0.529], ...
	'Position', [_xPos _yPos 1108 592], ...
	'Resize', 'on', ...
	'windowstyle', 'normal', ...
	'MenuBar', 'none');
  Image_GOL = axes( ...
	'Units', 'pixels', ... 
	'parent',oLWnd, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [19 325 529 216]);
  numGLA = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [573 454 195 23], ... 
	'String', '', ... 
	'TooltipString', '');
  denGLA = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [573 401 192 21], ... 
	'String', '', ... 
	'TooltipString', '');
  Label_2 = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [530 432 243 15], ... 
	'String', 'G(s) = -----------------------------------------------', ... 
	'TooltipString', '');
  Label_3 = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [798 459 189 15], ... 
	'String', 'bm*s^m+......+b1*s^1+b0', ... 
	'TooltipString', '');
  Label_4 = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [798 405 192 15], ... 
	'String', 'an*s^n+.....+a1*s^1+a0', ... 
	'TooltipString', '');
  btn_ZPmap = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [25 270 173 22], ... 
	'String', 'Poles and Zeros Map', ... 
	'TooltipString', '');
  Label_5 = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [535 509 292 18], ... 
	'String', 'Open Loop Transfer Function:', ... 
	'TooltipString', '');
  Label_6 = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [20 301 247 18], ... 
	'String', 'Information about G(s):', ... 
	'TooltipString', '');
  Label_7 = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [20 234 122 18], ... 
	'String', 'Simulation:', ... 
	'TooltipString', '');
  Label_8 = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [20 134 234 18], ... 
	'String', 'Simulation Parameters:', ... 
	'TooltipString', '');
  btn_OLstep = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [25 198 173 25], ... 
	'String', 'Step Response', ... 
	'TooltipString', '');
  btn_OLimp = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [25 163 173 24], ... 
	'String', 'Impulse Response', ... 
	'TooltipString', '');
  amplitud_k = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [180 95 52 22], ... 
	'String', '', ... 
	'TooltipString', '');
  Label_9 = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [25 99 136 15], ... 
	'String', 'Step Amplitude =', ... 
	'TooltipString', '');
  Label_10 = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [25 68 141 15], ... 
	'String', 'Simulation Time =', ... 
	'TooltipString', '');
  tFinal = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [180 64 50 22], ... 
	'String', '', ... 
	'TooltipString', '');
  btn_OLhelp = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [782 5 90 22], ... 
	'String', 'Help', ... 
	'TooltipString', '');
  btn_OLclose = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.933 0.933 0.925], ... 
	'Position', [997 5 90 22], ... 
	'String', 'Close', ... 
	'TooltipString', '');
  Label_10 = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 15, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [19 558 634 24], ... 
	'String', 'Analysis and Simulation of Open Loop Systems', ... 
	'TooltipString', '');
  Image_2 = axes( ...
	'Units', 'pixels', ... 
	'parent',oLWnd, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [311 64 534 231]);
  Info = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [885 282 188 15], ... 
	'String', 'Additional Information:', ... 
	'TooltipString', '');
  sistema = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [875 239 74 15], ... 
	'String', 'System:', ... 
	'TooltipString', '');
  Test = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [875 157 118 15], ... 
	'String', 'Settling Time. = ', ... 
	'TooltipString', '');
  tiempo_estab = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [1002 155 90 22], ... 
	'String', '', ... 
	'TooltipString', '');
  y_inf = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [875 197 68 15], ... 
	'String', 'y(inf) =', ... 
	'TooltipString', '');
  valor_final = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 195 90 22], ... 
	'String', '', ... 
	'TooltipString', '');
  Label_15 = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 7, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [875 136 85 11], ... 
	'String', '(Approximated)', ... 
	'TooltipString', '');
  label_Estabilidad = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 240 0 17], ... 
	'String', '', ... 
	'TooltipString', '');
  btn_OLfig = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [845 275 25 22], ... 
	'String', '+', ... 
	'TooltipString', '');
  label_EstabilidadGLA = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 235 147 22], ... 
	'String', '', ... 
	'TooltipString', '');
  btn_OLsave = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [890 5 90 22], ... 
	'String', 'Save', ... 
	'TooltipString', '');
  btn_OLsetdefault = uicontrol( ...
	'parent',oLWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.125 0.290 0.529], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [885 505 212 22], ... 
	'String', 'Load Set Default Values', ... 
	'TooltipString', '');

  oLWnd = struct( ...
      'figure', oLWnd, ...
      'Image_GOL', Image_GOL, ...
      'numGLA', numGLA, ...
      'denGLA', denGLA, ...
      'Label_2', Label_2, ...
      'Label_3', Label_3, ...
      'Label_4', Label_4, ...
      'btn_ZPmap', btn_ZPmap, ...
      'Label_5', Label_5, ...
      'Label_6', Label_6, ...
      'Label_7', Label_7, ...
      'Label_8', Label_8, ...
      'btn_OLstep', btn_OLstep, ...
      'btn_OLimp', btn_OLimp, ...
      'amplitud_k', amplitud_k, ...
      'Label_9', Label_9, ...
      'Label_10', Label_10, ...
      'tFinal', tFinal, ...
      'btn_OLhelp', btn_OLhelp, ...
      'btn_OLclose', btn_OLclose, ...
      'Label_10', Label_10, ...
      'Image_2', Image_2, ...
      'Info', Info, ...
      'sistema', sistema, ...
      'Test', Test, ...
      'tiempo_estab', tiempo_estab, ...
      'y_inf', y_inf, ...
      'valor_final', valor_final, ...
      'Label_15', Label_15, ...
      'label_Estabilidad', label_Estabilidad, ...
      'btn_OLfig', btn_OLfig, ...
      'label_EstabilidadGLA', label_EstabilidadGLA, ...
      'btn_OLsave', btn_OLsave, ...
      'btn_OLsetdefault', btn_OLsetdefault);


  set (btn_ZPmap, 'callback', {@btn_ZPmap_doIt, oLWnd});
  set (btn_OLstep, 'callback', {@btn_OLstep_doIt, oLWnd});
  set (btn_OLimp, 'callback', {@btn_OLimp_doIt, oLWnd});
  set (btn_OLhelp, 'callback', {@btn_OLhelp_doIt, oLWnd});
  set (btn_OLclose, 'callback', {@btn_OLclose_doIt, oLWnd});
  set (Label_10, 'callback', {@Label_10_doIt, oLWnd});
  set (btn_OLfig, 'callback', {@btn_OLfig_doIt, oLWnd});
  set (btn_OLsave, 'callback', {@btn_OLsave_doIt, oLWnd});
  set (btn_OLsetdefault, 'callback', {@btn_OLsetdefault_doIt, oLWnd});
  dlg = struct(oLWnd);


% global variable
global _ltitoolBasePath;

% Open loop image
axes(oLWnd.Image_GOL);
imshow([_ltitoolBasePath filesep() 'img' filesep() 'fig_OL.png']);
refresh();

%------------------------------------------------------------------------------------------------
%  Load data defined by default
load([_ltitoolBasePath filesep() 'data' filesep() 'loadOLdata'])
%------------------------------------------------------------------------------------------------

% Clear the command Window
clc

%------------------------------------------------------------------------------------------------
% Show data inside teh window
set(oLWnd.numGLA,'string',polyout(GLA.num{1,1})); 
set(oLWnd.denGLA,'string',polyout(GLA.den{1,1}));
set(oLWnd.amplitud_k,'string',num2str(k));
set(oLWnd.tFinal,'string',num2str(tFinal));
%------------------------------------------------------------------------------------------------








  ret = oLWnd;
end

