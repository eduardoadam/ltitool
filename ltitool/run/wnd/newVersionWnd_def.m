## -*- texinfo -*-
## @deftypefn  {} {} dummy()
##
## This is a dummy function documentation. This file have a lot functions
## and each one have a little documentation. This text is to avoid a warning when
## install this file as part of package.
## @end deftypefn
##
## Set the graphics toolkit and force read this file as script file (not a function file).
##
graphics_toolkit qt;
##


##
##
## Begin callbacks definitions 
##

## @deftypefn  {} {} btnDownload_doIt (@var{source}, @var{callbackdata}, @var{newVersionWnd})
##
## Define a callback for default action of btnDownload control.
##
## @end deftypefn
function btnDownload_doIt(source, callbackdata, newVersionWnd)

% This code will be executed when user click the button control.
% As default, all events are deactivated, to activate must set the
% propertie 'have callback' from the properties editor

% Download file
%url = ["file:" _ltitoolBasePath filesep() "ltitool_manual" filesep() "ltitool_manual.html"];
url = ["https://www.dropbox.com/s/48gp4tnvb4sma1i/ltitool.tar.gz?dl=0"];

  if(isunix())
    system(["xdg-open " url]);
  elseif (ispc())
    system(["start " url]);
  else
    disp(["I don't know how to open " url " in your os. Sorry!"]);
  endif;



end

## @deftypefn  {} {} btnNewVersionClose_doIt (@var{source}, @var{callbackdata}, @var{newVersionWnd})
##
## Define a callback for default action of btnNewVersionClose control.
##
## @end deftypefn
function btnNewVersionClose_doIt(source, callbackdata, newVersionWnd)

% This code will be executed when user click the button control.
% As default, all events are deactivated, to activate must set the
% propertie 'have callback' from the properties editor

% Close windown
close(newVersionWnd.figure);
end

## @deftypefn  {} {} btnInstallHelp_doIt (@var{source}, @var{callbackdata}, @var{newVersionWnd})
##
## Define a callback for default action of btnInstallHelp control.
##
## @end deftypefn
function btnInstallHelp_doIt(source, callbackdata, newVersionWnd)

%
% Run presentation to help  for installation as html file.
%

% global variable
global _ltitoolBasePath;

% Download file
url = ["file:" _ltitoolBasePath filesep() "ltitool_manual" filesep() "node3.html"];

  if(isunix())
    system(["xdg-open " url]);
  elseif (ispc())
    system(["start " url]);
  else
    disp(["I don't know how to open " url " in your os. Sorry!"]);
  endif;

end

 
## @deftypefn  {} {@var{ret} = } show_newVersionWnd()
##
## Create windows controls over a figure, link controls with callbacks and return 
## a window struct representation.
##
## @end deftypefn
function ret = show_newVersionWnd()
  _scrSize = get(0, "screensize");
  _xPos = (_scrSize(3) - 591)/2;
  _yPos = (_scrSize(4) - 256)/2;
   newVersionWnd = figure ( ... 
	'Color', [0.937 0.922 0.906], ...
	'Position', [_xPos _yPos 591 256], ...
	'Resize', 'on', ...
	'windowstyle', 'normal', ...
	'MenuBar', 'none');
  reportNewVersion = uicontrol( ...
	'parent',newVersionWnd, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.937 0.922 0.906], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [10 69 195 15], ... 
	'String', 'New version is available.', ... 
	'TooltipString', '');
  btnDownload = uicontrol( ...
	'parent',newVersionWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.937 0.922 0.906], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [206 64 179 26], ... 
	'String', 'Download from here', ... 
	'TooltipString', '');
  btnNewVersionClose = uicontrol( ...
	'parent',newVersionWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.937 0.922 0.906], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [490 14 90 22], ... 
	'String', 'Close', ... 
	'TooltipString', '');
  btnInstallHelp = uicontrol( ...
	'parent',newVersionWnd, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.937 0.922 0.906], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [331 14 127 22], ... 
	'String', 'Installation Help', ... 
	'TooltipString', '');
  ImageLogo = axes( ...
	'Units', 'pixels', ... 
	'parent',newVersionWnd, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [152 117 292 119]);

  newVersionWnd = struct( ...
      'figure', newVersionWnd, ...
      'reportNewVersion', reportNewVersion, ...
      'btnDownload', btnDownload, ...
      'btnNewVersionClose', btnNewVersionClose, ...
      'btnInstallHelp', btnInstallHelp, ...
      'ImageLogo', ImageLogo);


  set (btnDownload, 'callback', {@btnDownload_doIt, newVersionWnd});
  set (btnNewVersionClose, 'callback', {@btnNewVersionClose_doIt, newVersionWnd});
  set (btnInstallHelp, 'callback', {@btnInstallHelp_doIt, newVersionWnd});
  dlg = struct(newVersionWnd);

%
% The source code writed here will be executed when
% windows load. Work like 'onLoad' event of other languages.
%

% global variable
global _ltitoolBasePath; global _ltitoolImgPath;

% ltitool logo image
axes(newVersionWnd.ImageLogo);
imshow([_ltitoolImgPath filesep() 'logoLtitool3.png']);
refresh();




  ret = newVersionWnd;
end

