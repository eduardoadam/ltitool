%
% Set the graphics toolkit and force read this file as script file (not a function file).
%
graphics_toolkit qt;
%


%
%
% Begin callbacks definitions 
%

function btn_GHmap_doIt(source, callbackdata, GHwindow)

%
% Plot zeros-poles map of G(s)H(s)
%

% global variable
global _basePath;

% Clear figure
cla(dlg.Image_2, "reset")

s = tf('s');

% Read data from main window
% ------------------------------------------------
% Data from main window
AmplitudSP = str2num(get(dlg.AmplitudSP, 'string'));  % k: step amplitud
tFinal = str2num(get(dlg.tFinal, 'string'));          % Tf: simulation time
Kr = str2num(get(dlg.Kr, 'string'));                  % Kr: controller gain

% Built GH transfer function
numGH = get(dlg.numGH, 'string');
denGH = get(dlg.denGH, 'string');
sysStrGH = strcat('(',numGH,')', '/','(', denGH,')');
GH_Kr = tf(eval(sysStrGH));	% transfer function of G(s)H(s)/Kr
GH=Kr*GH_Kr;

% ----------------------------------
% Zeros-Poles map of G(s)H(s)
% ----------------------------------
title_string='Zeros and Poles Map of G(s)H(s)';
legend_ceros_string='Zeros of G(s)H(s)';
legend_polos_string='Poles of G(s)H(s)';

% Plot zeros-poles map
% ----------------------------------
axes(dlg.Image_2);
xpzmap(title_string,legend_ceros_string,legend_polos_string,GH.num{1,1},GH.den{1,1});
%xpzmap(title_string,legend_ceros_string,legend_polos_string,GH.num{1,1},GH.den{1,1});
figuraGH=1;

% Save data
save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')


refresh();

end

function btn_GHstep_doIt(source, callbackdata, GHwindow)

%
% Closed loop system step response
%

% global variable
global _basePath;

% clear figure
cla(dlg.Image_2, "reset")

% Complex variable "s"
s = tf('s');

% Read data from main window
% ------------------------------------------------
% Data from main window, G(s)H(s) and Kr
AmplitudSP = str2num(get(dlg.AmplitudSP, 'string'));  % k: step amplitud
tFinal = str2num(get(dlg.tFinal, 'string'));          % Tf: simulation time
Kr = str2num(get(dlg.Kr, 'string'));                  % Kr: controller gain

% Built GH transfer function
numGH = get(dlg.numGH, 'string');
denGH = get(dlg.denGH, 'string');
sysStrGH = strcat('(',numGH,')', '/','(', denGH,')');
GH_Kr = tf(eval(sysStrGH));	% Transfer Funtion G(s)H(s) /Kr
GH=minreal(Kr*GH_Kr);			% Transfer Funtion G(s)H(s) 

% ----------------------------------
% Respuesta al Escalon
% ----------------------------------
axes(dlg.Image_2);
GHstepresponse(GH.num{1,1},GH.den{1,1},AmplitudSP,tFinal,1000);
hold off
figuraGH=6;


% Additional information for main window
% ------------------------------------------------------------------------
[estabilidad,yinf,Test]=additionalinfoFB(GH.num{1,1},GH.den{1,1},AmplitudSP,tFinal,1000);
set(dlg.label_Estabilidad, "String", num2str(estabilidad));
set(dlg.valor_final, "String", num2str(yinf));
set(dlg.tiempo_estab_GH, "String", num2str(Test));

% graba datos
save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')

refresh();

end

function btn_GHimp_doIt(source, callbackdata, GHwindow)

%
% Llama a graficar un escal√≥n
%

% global variable
global _basePath;

% limpio la figura
cla(dlg.Image_2, "reset")

s = tf('s');

% Funcion de transferencia de LA
% ------------------------------------------------
% Num : string del numerador que toma de la ventana principal
% Den: string del denominador que toma de la ventana princial
AmplitudSP = str2num(get(dlg.AmplitudSP, 'string'));  % k: steo amplitud
tFinal = str2num(get(dlg.tFinal, 'string'));          % Tf: simulation time
Kr = str2num(get(dlg.Kr, 'string'));                  % Kr: controller gain

% Built GH transfer function
numGH = get(dlg.numGH, 'string');
denGH = get(dlg.denGH, 'string');
sysStrGH = strcat('(',numGH,')', '/','(', denGH,')');
GH_Kr = tf(eval(sysStrGH));	% Transfer Funtion G(s)H(s) 
GH=minreal(Kr*GH_Kr);			% Transfer Funtion G(s)H(s) 


% ----------------------------------
% Impulse Response
% ----------------------------------
axes(dlg.Image_2);
GHimpulseresponse(GH.num{1,1},GH.den{1,1},tFinal,1000);
hold off
figuraGH=7;

% Additional information for main window
% ------------------------------------------------------------------------
Gcl=minreal(s*GH/(1+GH)); % multiply by s to calculate the impulse response using Gcl(s)
[estabilidad,yinf,Test]=additionalinfo(Gcl.num{1,1},Gcl.den{1,1},AmplitudSP,tFinal,1000);
set(dlg.label_Estabilidad, "String", num2str(estabilidad));
set(dlg.tiempo_estab_GH, "String", num2str(Test));
set(dlg.valor_final, "String", num2str(yinf));

% Save data
save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')

refresh();

end

function ayudaLA_doIt(source, callbackdata, GHwindow)


%
% Run presentation to help  as html file.
%

% global variable
global _basePath;

% Load html file
url = ["file:" _basePath filesep() "ltitool_manual" filesep() "ltitool_manual.html"];

  if(isunix())
    system(["xdg-open " url]);
  elseif (ispc())
    system(["start " url]);
  else
    disp(["I don't know how to open " url " in your os. Sorry!"]);
  endif;

end

function btn_closeGH_doIt(source, callbackdata, GHwindow)


  % Cierro la ventana
  close(dlg.GHwindow);

end

function btn_GHfigs_doIt(source, callbackdata, GHwindow)

% global variable
global _basePath;

% Complex variable s
s=tf('s');

% load data from the last figure
load([_basePath filesep() 'data' filesep() 'loadGHdata'])

if figuraGH==1, % Zeros and poles map of G(s)H(s)
  figure
  title_string='Mapa de Polos y Ceros G(s)H(s)';
  legend_ceros_string='Ceros de Lazo Abierto';
  legend_polos_string='Polos de Lazo Abierto';
  xpzmap(title_string,legend_ceros_string,legend_polos_string,GH.num{1,1},GH.den{1,1});
  axisx=xlabel('Parte Real'); axisy=ylabel('Parte Imaginaria');
  set(axisx,'fontsize',14);  
  set(axisy,'fontsize',14);  
  % rewrite data
  figuraGH=1;
  % Save data
  save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')
endif

if figuraGH==2, % Zeros and poles map of Glc(s)
  figure
  Glc = minreal(GH/(1+GH));  % Closed loop transfer funtion
  title_string='Mapa de Polos y Ceros de Lazo Cerrado';
  legend_ceros_string='Ceros de Lazo Cerrado';
  legend_polos_string='Polos de Lazo Cerrado';
  xpzmap(title_string,legend_ceros_string,legend_polos_string,Glc.num{1,1},Glc.den{1,1});
  axisx=xlabel('Parte Real'); axisy=ylabel('Parte Imaginaria');
  set(axisx,'fontsize',14);  
  set(axisy,'fontsize',14);  
  % rewrite data
  figuraGH=2;
  % Save data
  save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')
endif

if figuraGH==3, % Root locus diagram
  figure
  [Kast,Kast_ult,wultimo,GM,w180,PM]=GHrlocusplot(GH.num{1,1},GH.den{1,1},Kr,1000);
  axisx=xlabel('Real G(s)H(s)'); axisy=ylabel('Imag. G(s)H(s)');
  set(axisx,'fontsize',14);  
  set(axisy,'fontsize',14);  
  % rewrite data
  figuraGH=3;
  % Save data
  save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')
endif

if figuraGH==4, % Bode Diagram
  figure
  delay=0;
  [Kast,Kast_ult,wultimo,GM,wcg,PM]=GHbodeplot(GH.num{1,1},GH.den{1,1},delay,Kr);
  % rewrite data
  figuraGH=4;  
  % Save data
  save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')
endif

if figuraGH==5, % Nyquist Diagram
  figure
  delay=0;
  [Kast,Kast_ult,wultimo,GM,wcg,PM]=GHnyquistplot(GH.num{1,1},GH.den{1,1},delay,Kr);
  % rewrite data
  figuraGH=5;
  % Save data
  save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')
endif

if figuraGH==6, % Step response
  % Grafico
  figure
  GHstepresponse(GH.num{1,1},GH.den{1,1},AmplitudSP,tFinal,1000)
  axisx=xlabel('Time'); axisy=ylabel('Ouput');
  set(axisx,'fontsize',14);  
  set(axisy,'fontsize',14);  
  % rewrite data
  figuraGH=6;
  % Save data
  save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')
endif

if figuraGH==7, % Impulse response
  figure
  GHimpulseresponse(GH.num{1,1},GH.den{1,1},tFinal,1000);
  axisx=xlabel('Time'); axisy=ylabel('Ouput');
  set(axisx,'fontsize',14);  
  set(axisy,'fontsize',14);  
  % rewrite data
  figuraGH=7;
  % Save data
  save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')
endif

end

function btn_RL_doIt(source, callbackdata, GHwindow)

%
% Plot Root Locus
%

% global variable
global _basePath;

% Clear figure
cla(dlg.Image_2, "reset")

% Complex variable "s"
s = tf('s');

% Read data from main window
% -----------------------------------------------------
% Data from main window, G(s)H(s) and Kr
Kr = str2num(get(dlg.Kr, 'string'));                  % Kr: controller gain
numGH = get(dlg.numGH, 'string');
denGH = get(dlg.denGH, 'string');
sysStrGH = strcat('(',numGH,')', '/','(', denGH,')');

% Built GH transfer function
GH_Kr = tf(eval(sysStrGH));	% Transfer Funtion G(s)H(s) /Kr
GH=Kr*GH_Kr;

% Simulation values
AmplitudSP = str2num(get(dlg.AmplitudSP, 'string'));  % k: amplitud del escalon
tFinal = str2num(get(dlg.tFinal, 'string'));          % Tf: tiempo de simulacion

% ----------------------------------
% Root locus plot
% ----------------------------------
axes(dlg.Image_2);
[Kast,Kast_ult,wultimo,GM,wcg,PM]=GHrlocusplot(GH.num{1,1},GH.den{1,1},Kr,1000);
hold off
figuraGH=3;


% Additional information for main window
% ------------------------------------------------------------------------
set(dlg.Kasterisco, "String", num2str(Kast))
set(dlg.Kasterisco_ultimo, "String", num2str(Kast_ult))
set(dlg.wu, "String", num2str(wultimo))
set(dlg.gain_margin, "String", num2str(GM))
set(dlg.w_cg, "String", num2str(wcg))
set(dlg.phase_margin, "String", num2str(PM))

% Save data
save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')

end

function btn_Bode_doIt(source, callbackdata, GHwindow)


%
% Bode Plot
%

% global variable
global _basePath;

% Complex variable "s"
s = tf('s');

% Read data from main window
% -----------------------------------------------------
% Data from main window, G(s)H(s) and Kr
Kr = str2num(get(dlg.Kr, 'string'));                  % Kr: controller gain
numGH = get(dlg.numGH, 'string');
denGH = get(dlg.denGH, 'string');
sysStrGH = strcat('(',numGH,')', '/','(', denGH,')');

% Built GH transfer function
GH_Kr = tf(eval(sysStrGH));		% Transfer Funtion G(s)H(s) /Kr
GH=Kr*GH_Kr;				% Transfer Funtion G(s)H(s) 

% Simulation values
AmplitudSP = str2num(get(dlg.AmplitudSP, 'string'));  % k: amplitud del escalon
tFinal = str2num(get(dlg.tFinal, 'string'));          % Tf: tiempo de simulacion

% ----------------------------------
% Bode diagram
% ----------------------------------
figure
delay=0;
[Kast,Kast_ult,wultimo,GM,wcg,PM]=GHbodeplot(GH.num{1,1},GH.den{1,1},delay,Kr);
hold off
figuraGH=4;

% ------------------------------------------------------------------------
% Additional information for main window
% ------------------------------------------------------------------------
set(dlg.Kasterisco, "String", num2str(Kast));
set(dlg.Kasterisco_ultimo, "String", num2str(Kast_ult));
set(dlg.wu, "String", num2str(wultimo));
set(dlg.gain_margin, "String", num2str(GM));
set(dlg.w_cg, "String", num2str(wcg));
set(dlg.phase_margin, "String", num2str(PM));

% Save data
save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')

end

function btn_Nyquist_doIt(source, callbackdata, GHwindow)


%
% Plot Nyquist
%

% global variable
global _basePath;

% clear figure
cla(dlg.Image_2, "reset")

% Complex variable "s"
s = tf('s');

% Read data from main window
% -----------------------------------------------------
% Data from main window, G(s)H(s) and Kr
Kr = str2num(get(dlg.Kr, 'string'));                  % Kr: controller gain
numGH = get(dlg.numGH, 'string');
denGH = get(dlg.denGH, 'string');
sysStrGH = strcat('(',numGH,')', '/','(', denGH,')');

% Built GH transfer function
GH_Kr = tf(eval(sysStrGH));	% Transfer Funtion G(s)H(s) /Kr
GH=Kr*GH_Kr;			% Transfer Funtion G(s)H(s)

% Simulation values
AmplitudSP = str2num(get(dlg.AmplitudSP, 'string'));  % k: step amplitud
tFinal = str2num(get(dlg.tFinal, 'string'));          % Tf: simulation time

% ----------------------------------
% Niquist diagram
% ----------------------------------
axes(dlg.Image_2);
delay=0;
[Kast,Kast_ult,wultimo,GM,wcg,PM]=GHnyquistplot(GH.num{1,1},GH.den{1,1},delay,Kr);
hold off
figuraGH=5;

% ------------------------------------------------------------------------
% Additional information for main window
% ------------------------------------------------------------------------
set(dlg.Kasterisco, "String", num2str(Kast));
set(dlg.Kasterisco_ultimo, "String", num2str(Kast_ult));
set(dlg.wu, "String", num2str(wultimo));
set(dlg.gain_margin, "String", num2str(GM));
set(dlg.w_cg, "String", num2str(wcg));
set(dlg.phase_margin, "String", num2str(PM));

% Save data
save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')

end

function btn_Glcmap_doIt(source, callbackdata, GHwindow)

%
% Plot zeros-poles map of closed loop function
%

% global variable
global _basePath;

% Clear figure
cla(dlg.Image_2, "reset")

s = tf('s');

% Read data from main window
% ------------------------------------------------
% Data from main window
AmplitudSP = str2num(get(dlg.AmplitudSP, 'string'));  % k: step amplitud
tFinal = str2num(get(dlg.tFinal, 'string'));          % Tf: simulation time
Kr = str2num(get(dlg.Kr, 'string'));                  % Kr: controller gain

% Built GH transfer function
numGH = get(dlg.numGH, 'string');
denGH = get(dlg.denGH, 'string');
sysStrGH = strcat('(',numGH,')', '/','(', denGH,')');
GH_Kr = tf(eval(sysStrGH));	% Funcion de transferencia de G(s)H(s)/Kr
GH=Kr*GH_Kr;

% Built closed loop transfer function
Glc = minreal(GH/(1+GH));

% -------------------------------------------------------------------------
% Zeros-Poles map of closed loop system
% -------------------------------------------------------------------------
title_string='Zeros and Poles Map of Closed Loop System';
legend_ceros_string='Zeros of Gcl(s)';
legend_polos_string='Poles of Gcl(s)';

% Plot zeros-poles map
% ----------------------------------
axes(dlg.Image_2);
xpzmap(title_string,legend_ceros_string,legend_polos_string,Glc.num{1,1},Glc.den{1,1});
figuraGH=2;

% Save data
save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')

refresh();

end

function btn_infoadicional_doIt(source, callbackdata, GHwindow)


%
% Present adicional information from main window values
%

% global variable
global _basePath;

% complex variable "s"
s = tf('s');

% Read data from main window
% -----------------------------------------------------
% Data from main window, G(s)H(s) and Kr
Kr = str2num(get(dlg.Kr, 'string'));                  % Kr: controller gain
numGH = get(dlg.numGH, 'string');
denGH = get(dlg.denGH, 'string');
sysStrGH = strcat('(',numGH,')', '/','(', denGH,')');

% Built GH transfer function
GH_Kr = tf(eval(sysStrGH));	% Transfer Funtion G(s)H(s) /Kr
GH=Kr*GH_Kr;			% Transfer Funtion G(s)H(s) 

% Simulation values
AmplitudSP = str2num(get(dlg.AmplitudSP, 'string'));  % k: step amplitud
tFinal = str2num(get(dlg.tFinal, 'string'));          % Tf: simulation time


% Additional information for main window
% ------------------------------------------------------------------------
% Additional information of  dinamic response
[estabilidad,yinf,Test]=additionalinfoFB(GH.num{1,1},GH.den{1,1},AmplitudSP,tFinal,1000);
set(dlg.label_Estabilidad, "String", num2str(estabilidad));
set(dlg.valor_final, "String", num2str(yinf));
set(dlg.tiempo_estab_GH, "String", num2str(Test));

% Zeros and Poles
nGH=GH.num{1,1}; dGH=GH.den{1,1};
[ceros_la, polos_la,KGH]=xzpkdata(nGH,dGH);
Kasteric=KGH;

% Additional information of frequency  response
[mGH,pGH,w]=bode(GH);
% fix the phase wrap arownd
phaud=pGH;
phw=unwrap(phaud*pi/180);
phaud=phw*180/pi;
% delayed plant phase,
%phad=phaud + ((-w.*delay)*180/pi)';
delay=0;

[Kast,Kast_ult,wultimo,GM,wcg,PM]=additionalinfofreq(GH,Kasteric,mGH,phaud,delay,w);
set(dlg.Kasterisco, "String", num2str(Kast))
set(dlg.Kasterisco_ultimo, "String", num2str(Kast_ult))
set(dlg.wu, "String", num2str(wultimo))
set(dlg.gain_margin, "String", num2str(GM))
set(dlg.w_cg, "String", num2str(wcg))
set(dlg.phase_margin, "String", num2str(PM))

end

function btn_setdefaultGH_doIt(source, callbackdata, GHwindow)


%
% Load default values of G(s)H(s)
%
%

% global variable
global _basePath;

% Complex variable "s"
s=tf('s'); 

% Transfer function
% --------------------------
GH=0.5/(s*(s^2+s+1));
Kr=1.25;

% Simulation data
AmplitudSP=1;
tFinal=30;

% Figure
figuraGH=1;

% Save default data
% ---------------------------
save([_basePath filesep() 'data' filesep() 'loadGHdata'],'GH','Kr','AmplitudSP','tFinal','figuraGH')


% ------------------------------------------------------------------------
% Reload information to main window
% ------------------------------------------------------------------------
set(dlg.numGH,'string',polyout(GH.num{1,1}/Kr)); 
set(dlg.denGH,'string',polyout(GH.den{1,1}));
set(dlg.Kr,'string',num2str(Kr));
set(dlg.AmplitudSP,'string',num2str(AmplitudSP));
set(dlg.tFinal,'string',num2str(tFinal));

end

function btn_saveGH_doIt(source, callbackdata, GHwindow)


% Save data of:
% 	G(s)H(s) transfer function,
% 	Set-Point  step response (ysim,tsim)
% 	Set-Point step amplitud (AmplitudSP)
% 	Simulation time  (tFinal)
% 	Settling value (yinf)
% 	Settling time (Test)


[fname, fpath, fltidx] = uiputfile ({'.txt','Archivos de texto';'.m', 'Scripts de octave';'.', 'Todos los archivos'}, 'Abrir archivo. Elija un nombre de archivo para abrir');
if(fname)
  % Complex variable "s"
  s = tf('s');

  % Read data from main window
  % -----------------------------------------------------
  % Data from main window, G(s)H(s) and Kr
  Kr = str2num(get(dlg.Kr, 'string'));                  % Kr: controller gain
  numGH = get(dlg.numGH, 'string');
  denGH = get(dlg.denGH, 'string');

  % Built GH transfer function
  sysStrGH = strcat('(',numGH,')', '/','(', denGH,')');
  GH_Kr = tf(eval(sysStrGH));	% Transfer Funtion G(s)H(s) /Kr
  GH=Kr*GH_Kr;			% Transfer Funtion G(s)H(s)

  % Simulation values
  AmplitudSP = str2num(get(dlg.AmplitudSP, 'string'));  % k: step amplitud
  tFinal = str2num(get(dlg.tFinal, 'string'));          % Tf: simulation time


  % Simulation and Additional Information
  % --------------------------------------------------------
  % Set_Point step response
  nptos=1000;
  [estabilidad,yinf,Test,step_tsim,step_ysim]=additionalinfoFB(GH.num{1,1},GH.den{1,1},AmplitudSP,tFinal,nptos);

  % Impulse Response
  gcl=minreal(feedback(GH));
  DT=tFinal/nptos;
  [imp_ysim,imp_tsim]=impulse(gcl, tFinal,DT); 

  % Zeros-poles additional information
  %GH
  nGH=GH.num{1,1}; dGH=GH.den{1,1};
  [zeros_GH, poles_GH,KGH]=xzpkdata(nGH,dGH);
  % Closed loop
  Gcl = minreal(GH/(1+GH));
  [zeros_cl, poles_cl,Kcl]=xzpkdata(Gcl.num{1,1},Gcl.den{1,1});

  % Frequency response additional information
  Kasteric=KGH;
  [mGH,pGH,w]=bode(GH);
  % fix the phase wrap arownd
  phaud=pGH;
  phw=unwrap(phaud*pi/180);
  phaud=phw*180/pi;
  % delayed plant phase,
  %phad=phaud + ((-w.*delay)*180/pi)';
  delay=0;
  [Kast,Kast_ult,wultimo,GM,wcg,PM]=additionalinfofreq(GH,Kasteric,mGH,phaud,delay,w);


  % Save results
  % --------------------------
  save([fpath fname], 'GH','Gcl', ...
       'zeros_GH', 'poles_GH','KGH','zeros_cl', 'poles_cl','Kcl', ...
       'estabilidad','yinf','Test','tFinal','step_tsim','step_ysim', 'imp_tsim','imp_ysim', ...
       'AmplitudSP','Kast','Kast_ult','wultimo','GM','wcg','PM');
else
  disp('Cancelado');
endif;

end

 
%
% Dialog creation windows function 
%
function ret = show_GHwindow()
  _scrSize = get(0, "screensize");
  _xPos = (_scrSize(3) - 1182)/2;
  _yPos = 113;
   GHwindow = figure ( ... 
	'Color', [0.949 0.949 0.949], ...
	'Position', [_xPos _yPos 1182 625], ...
	'Resize', 'on', ...
	'windowstyle', 'normal', ...
	'MenuBar', 'none');
  Image_GH = axes( ...
	'Units', 'pixels', ... 
	'parent',GHwindow, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [19 392 459 171]);
  numGH = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [593 497 195 23], ... 
	'String', '', ... 
	'TooltipString', '');
  denGH = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [593 439 192 21], ... 
	'String', '', ... 
	'TooltipString', '');
  Label_2 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [505 473 290 17], ... 
	'String', 'G(s)H(s)/K = ----------------------------------------------', ... 
	'TooltipString', '');
  Label_3 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [813 500 173 17], ... 
	'String', 'bm*s^m+......+b1*s^1+b0 ', ... 
	'TooltipString', '');
  Label_4 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [813 446 158 17], ... 
	'String', 'an*s^n+.....+a1*s^1+a0 ', ... 
	'TooltipString', '');
  btn_GHmap = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [250 348 173 22], ... 
	'String', ' Zeros-Poles map ', ... 
	'TooltipString', '');
  Label_5 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 13, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [500 539 235 20], ... 
	'String', 'Open Loop Transfer Function', ... 
	'TooltipString', '');
  Label_infoGH = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [20 352 193 17], ... 
	'String', 'Information About G(s)H(s)', ... 
	'TooltipString', '');
  Label_7 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [175 268 77 17], ... 
	'String', 'Simulation', ... 
	'TooltipString', '');
  Label_8 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [175 133 167 17], ... 
	'String', 'Simulation Parameters ', ... 
	'TooltipString', '');
  btn_GHstep = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [175 226 173 25], ... 
	'String', 'Step Response', ... 
	'TooltipString', '');
  btn_GHimp = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [180 186 173 24], ... 
	'String', 'Impulse Response', ... 
	'TooltipString', '');
  AmplitudSP = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [335 93 57 22], ... 
	'String', '', ... 
	'TooltipString', '');
  Label_9 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [175 95 118 17], ... 
	'String', 'SP Step Amplitud', ... 
	'TooltipString', '');
  Label_10 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [175 59 109 17], ... 
	'String', 'Simulation Time', ... 
	'TooltipString', '');
  tFinal = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [335 57 56 22], ... 
	'String', '', ... 
	'TooltipString', '');
  ayudaLA = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [20 18 90 22], ... 
	'String', 'Help', ... 
	'TooltipString', '');
  btn_closeGH = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [1080 8 90 22], ... 
	'String', 'Close', ... 
	'TooltipString', '');
  Label_10 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 15, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [224 592 629 23], ... 
	'String', 'Analysis and Simulation of Closed Loop Systems Based on G(s)H(s)', ... 
	'TooltipString', '');
  Image_2 = axes( ...
	'Units', 'pixels', ... 
	'parent',GHwindow, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [448 56 466 314]);
  estabilidad = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 348 53 17], ... 
	'String', 'System:', ... 
	'TooltipString', '');
  Test = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 285 110 17], ... 
	'String', 'Settling Time. = ', ... 
	'TooltipString', '');
  tiempo_estab_GH = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [1082 283 90 22], ... 
	'String', '', ... 
	'TooltipString', '');
  y_inf = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 313 48 17], ... 
	'String', 'y(inf) =', ... 
	'TooltipString', '');
  valor_final = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [1082 313 90 22], ... 
	'String', '', ... 
	'TooltipString', '');
  Label_15 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 8, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 266 72 14], ... 
	'String', '(Approximate)', ... 
	'TooltipString', '');
  btn_GHfigs = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [915 348 25 22], ... 
	'String', '+', ... 
	'TooltipString', '');
  label_Estabilidad = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [1046 343 126 22], ... 
	'String', '', ... 
	'TooltipString', '');
  Label_Kr = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [500 403 118 17], ... 
	'String', 'Gain Variable, K =', ... 
	'TooltipString', '');
  Label_analisis = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [20 268 60 17], ... 
	'String', 'Analysis', ... 
	'TooltipString', '');
  btn_RL = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.945 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [20 228 126 22], ... 
	'String', 'Root Locus', ... 
	'TooltipString', '');
  btn_Bode = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.945 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [20 187 124 22], ... 
	'String', 'Bode', ... 
	'TooltipString', '');
  btn_Nyquist = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.945 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [20 148 124 22], ... 
	'String', 'Nyquist', ... 
	'TooltipString', '');
  Label_infoGlc = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'bold', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [20 313 225 17], ... 
	'String', 'Information About Closed Loop', ... 
	'TooltipString', '');
  btn_Glcmap = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.945 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [250 313 171 22], ... 
	'String', ' Zeros-Poles map ', ... 
	'TooltipString', '');
  Label_19 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 235 41 17], ... 
	'String', '[K*] = ', ... 
	'TooltipString', '');
  Kasterisco = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [1082 233 90 22], ... 
	'String', '', ... 
	'TooltipString', '');
  Kastultimo = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 198 50 17], ... 
	'String', '[K*u] = ', ... 
	'TooltipString', '');
  Kasterisco_ultimo = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [1080 198 90 22], ... 
	'String', '', ... 
	'TooltipString', '');
  Label_omega_u = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Standard Symbols L', ... 
	'FontSize', 15, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 163 60 27], ... 
	'String', 'w       =', ... 
	'TooltipString', '');
  wu = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [1080 163 90 22], ... 
	'String', '', ... 
	'TooltipString', '');
  Label_sub_u = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [970 163 30 17], ... 
	'String', '-180', ... 
	'TooltipString', '');
  Label_GM = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 128 39 17], ... 
	'String', 'GM = ', ... 
	'TooltipString', '');
  gain_margin = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [1080 128 90 22], ... 
	'String', '', ... 
	'TooltipString', '');
  Label_omega_180 = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Standard Symbols L', ... 
	'FontSize', 15, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 93 45 27], ... 
	'String', 'w   = ', ... 
	'TooltipString', '');
  Label_sub_cg = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [970 83 16 17], ... 
	'String', 'gc', ... 
	'TooltipString', '');
  w_cg = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [1080 93 90 22], ... 
	'String', '', ... 
	'TooltipString', '');
  Label_PM = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.949 0.949 0.949], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [955 53 41 17], ... 
	'String', 'PM  = ', ... 
	'TooltipString', '');
  phase_margin = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [1080 53 90 22], ... 
	'String', '', ... 
	'TooltipString', '');
  btn_infoadicional = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.961 0.965 0.969], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [950 378 165 22], ... 
	'String', 'Additional Information', ... 
	'TooltipString', '');
  btn_setdefaultGH = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.961 0.965 0.969], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [890 538 199 22], ... 
	'String', 'Load Default Values', ... 
	'TooltipString', '');
  btn_saveGH = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.961 0.965 0.969], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [950 13 90 22], ... 
	'String', 'Save', ... 
	'TooltipString', '');
  Kr = uicontrol( ...
	'parent',GHwindow, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Ubuntu', ... 
	'FontSize', 11, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [630 401 90 22], ... 
	'String', '', ... 
	'TooltipString', '');

  GHwindow = struct( ...
      'figure', GHwindow, ...
      'Image_GH', Image_GH, ...
      'numGH', numGH, ...
      'denGH', denGH, ...
      'Label_2', Label_2, ...
      'Label_3', Label_3, ...
      'Label_4', Label_4, ...
      'btn_GHmap', btn_GHmap, ...
      'Label_5', Label_5, ...
      'Label_infoGH', Label_infoGH, ...
      'Label_7', Label_7, ...
      'Label_8', Label_8, ...
      'btn_GHstep', btn_GHstep, ...
      'btn_GHimp', btn_GHimp, ...
      'AmplitudSP', AmplitudSP, ...
      'Label_9', Label_9, ...
      'Label_10', Label_10, ...
      'tFinal', tFinal, ...
      'ayudaLA', ayudaLA, ...
      'btn_closeGH', btn_closeGH, ...
      'Label_10', Label_10, ...
      'Image_2', Image_2, ...
      'estabilidad', estabilidad, ...
      'Test', Test, ...
      'tiempo_estab_GH', tiempo_estab_GH, ...
      'y_inf', y_inf, ...
      'valor_final', valor_final, ...
      'Label_15', Label_15, ...
      'btn_GHfigs', btn_GHfigs, ...
      'label_Estabilidad', label_Estabilidad, ...
      'Label_Kr', Label_Kr, ...
      'Label_analisis', Label_analisis, ...
      'btn_RL', btn_RL, ...
      'btn_Bode', btn_Bode, ...
      'btn_Nyquist', btn_Nyquist, ...
      'Label_infoGlc', Label_infoGlc, ...
      'btn_Glcmap', btn_Glcmap, ...
      'Label_19', Label_19, ...
      'Kasterisco', Kasterisco, ...
      'Kastultimo', Kastultimo, ...
      'Kasterisco_ultimo', Kasterisco_ultimo, ...
      'Label_omega_u', Label_omega_u, ...
      'wu', wu, ...
      'Label_sub_u', Label_sub_u, ...
      'Label_GM', Label_GM, ...
      'gain_margin', gain_margin, ...
      'Label_omega_180', Label_omega_180, ...
      'Label_sub_cg', Label_sub_cg, ...
      'w_cg', w_cg, ...
      'Label_PM', Label_PM, ...
      'phase_margin', phase_margin, ...
      'btn_infoadicional', btn_infoadicional, ...
      'btn_setdefaultGH', btn_setdefaultGH, ...
      'btn_saveGH', btn_saveGH, ...
      'Kr', Kr);


  set (btn_GHmap, 'callback', {@btn_GHmap_doIt, GHwindow});
  set (btn_GHstep, 'callback', {@btn_GHstep_doIt, GHwindow});
  set (btn_GHimp, 'callback', {@btn_GHimp_doIt, GHwindow});
  set (ayudaLA, 'callback', {@ayudaLA_doIt, GHwindow});
  set (btn_closeGH, 'callback', {@btn_closeGH_doIt, GHwindow});
  set (btn_GHfigs, 'callback', {@btn_GHfigs_doIt, GHwindow});
  set (btn_RL, 'callback', {@btn_RL_doIt, GHwindow});
  set (btn_Bode, 'callback', {@btn_Bode_doIt, GHwindow});
  set (btn_Nyquist, 'callback', {@btn_Nyquist_doIt, GHwindow});
  set (btn_Glcmap, 'callback', {@btn_Glcmap_doIt, GHwindow});
  set (btn_infoadicional, 'callback', {@btn_infoadicional_doIt, GHwindow});
  set (btn_setdefaultGH, 'callback', {@btn_setdefaultGH_doIt, GHwindow});
  set (btn_saveGH, 'callback', {@btn_saveGH_doIt, GHwindow});
  dlg = struct(GHwindow);


% Load packages
%pkg load control;
%pkg load linear-algebra;
%pkg load optim;
%pkg load signal;
%pkg load struct;

% global variable
global _basePath;

%------------------------------------------------------------------------------------------------
% G(s)H(s) image
axes(GHwindow.Image_GH);
imshow([_basePath filesep() 'img' filesep() 'fig_GH.png']);
refresh();

%------------------------------------------------------------------------------------------------
% Load data defined by default
load([_basePath filesep() 'data' filesep() 'loadGHdata'])
%------------------------------------------------------------------------------------------------

% Clear the command window
clc

%------------------------------------------------------------------------------------------------
% Show data inside teh window
set(GHwindow.numGH,'string',polyout(GH.num{1,1}/Kr)); 
set(GHwindow.denGH,'string',polyout(GH.den{1,1}));
set(GHwindow.Kr,'string',num2str(Kr));
set(GHwindow.AmplitudSP,'string',num2str(AmplitudSP));
set(GHwindow.tFinal,'string',num2str(tFinal));
%------------------------------------------------------------------------------------------------

























  ret = GHwindow;
end

